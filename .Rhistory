q()
n
res
length(res)
res[[1]]
res[["title"]]
bib
q()
n
library(rmarkdown)
render("notebook.Rmd")
render("notebook.Rmd")
csa.tab
render("notebook.Rmd")
render("notebook.Rmd")
render("notebook.Rmd")
render("notebook.Rmd")
render("notebook.Rmd")
render("notebook.Rmd")
q()
n
library(RCrawler)
install.packages("Rcrawler", dependencies = TRUE)
70
DATA
warnings()
install.packages("rvest")
p_load("rvest")
nrcs.csa
html_nodes("nrcs.csa", "table")
html_nodes(nrcs.csa, "table")
html_table(nrcs.csa)
nrcs.csa
names(nrcs.csa)
nrcs.csa[["node"]]
DATA
summary(DATA)
names(DATA)
DATA[[1]]
DATA[[2]]
DATA[[3]]
DATA[[4]]
csa.dat
DATA
Allinks
DATA[[1]]
DATA[[2]]
DATA[[3]]
DATA[[4]]
DATA[[10]]
INDEX
head(INDEX)
head(grepl("concern", INDEX[INDEX[, "Url"]], ignore.case = TRUE))
head(grepl("concern", INDEX[INDEX[, "Url"],], ignore.case = TRUE))
head(INDEX[grepl("concern", INDEX[INDEX[, "Url"],], ignore.case = TRUE),])
head(INDEX[grepl("resource", INDEX[INDEX[, "Url"],], ignore.case = TRUE),])
head(INDEX[grepl("usda", INDEX[INDEX[, "Url"],], ignore.case = TRUE),])
head(INDEX)
head(INDEX[,"Url"])
grepl("mitigation", head(INDEX[,"Url"]))
head(grepl("mitigation", INDEX[,"Url"]))
head(INDEX[grepl("mitigation", INDEX[,"Url"]),])
length((INDEX[grepl("mitigation", INDEX[,"Url"]),]))
(INDEX[grepl("mitigation", INDEX[,"Url"]),])
INDEX[grepl("mitigation", INDEX[,"Url"]),]
INDEX[grepl("mitigation", INDEX[,"Url"]), "Url"]
INDEX[grepl("resource", INDEX[,"Url"]), "Url"]
head(INDEX[, "Url"])
head(INDEX[, "Url"], 10)
nrc.names
nrc.names
nrc.names
nrc.names
nrc.names
nrc.names
nrc.tab
nrc.patterns
nrc.patterns
nrc.url
nrc.url
nrc.names
nrc.names
nrc.names
nrc.tab
?Rcrawler
save.image("data/nrcs-usda-gov-030004.Rdata")
nrc.tab
nrc.url
nrc.names
nrc.tab
head(INDEX)
nrc.tab
head(INDEX)
head(INDEX, 10)
nrc.tab
head(nrc.tab)
nrc.tab
INDEX[, "Level"]
nrc.tab
nrc.tab
nrc.tab
head(nrc.tab)
head(nrc.tab)
head(nrc.tab)
nrc.tab
lapply(nrc.tab, length)
lapply(nrc.tab, length)
nrc.tab
nrc.tab
nrc.tab
nrc.tab
head(nrc.tab)
mode(nrc.tab)
nrc.tab
summary(nrc.tab)
nrc.tab
length(nrc.tab)
length(nrc.tab[[1]])
nrc.tab
nrc.tab
nrc.cat
nrc.tab
nrc.url
nrc.url
nrc.url
nrc.url
nrc.tab
nrc.tab
nrc.cat
nrc.cat
do.call(rbind, nrc.cat)
nrc.cat
seq_along(5)
seq_along(1:10)
seq_along(1, 10)
seq_len(10)
max(unlist(lapply(nrc.cat, length))))
max(unlist(lapply(nrc.cat, length)))
max(unlist(lapply(nrc.cat, length)))
range(unlist(lapply(nrc.cat, length)))
i=1
nrc.cat
seq_len(max(unlist(lapply(nrc.cat, length))))
nrc.cat
nrc.tab
nrc.url
nrow(nrc.cat)
nrc.tab
nrow(nrc.tab)
length(nrc.url)
nrc.cat
length(nrc.url)
length(nrc.cat)
length(nrc.cat)
head(nrc.tab)
head(nrc.tab)
install.packages("kable")
library(rmarkdown(
library(rmarkdown)
render("notebook.Rmd")
render("notebook.Rmd")
exists("data/nrcs.usda.gov-030004/")
render("notebook.Rmd")
render("notebook.Rmd")
exists("./data/nrcs-usda-gov-030004.Rdata")
exists("./data/nrcs-usda-gov-030004.Rdata")
"nrcs-usda-gov-030004.Rdata" %in% dir("./data/")
render("notebook.Rmd")
install.packages("rJava")
no
library(rJava)
install.packages("rJava")
yes
devtools::install_github("ropensci/tabulizer", args="--no-multiarch")
1
1
yes
yes
install.packages("tabulizer")
remotes::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
1
yes
1
1
yes
yes
library(pdftools)
install.packages("pdftools")
yes
q()
n
install.packages("tabulizer")
70
remotes::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
1
no
4
4
Yes
Yes
summary(csa.mit.tabs)
csa.mit.tabs
head(csa.mit.tabs)
head(csa.mit.tabs)
csa.mit.head
grep("Waste Storage Structure", csa.mit.tab[, 1])
grep("Waste Storage Structure", csa.mit.tab[, 1], ignore.case = TRUE)
csa.mit.tab
csa.cwk[
csa.cwk
csa.mit.tab
head(csa.mit.tab)
colnames(csa.mit.tab)
colnames(csa.mit.tab)
head(csa.mit.tab)
nrc.tab
library(markdown)
library(rmarkdown)
render("notebook.Rmd")
nrc.cat
nrc.tab
ncol(nrc.tab)
head(nrc.tab)
 paste0(rep("Sub-Category"), (ncol(nrc.tab) - 2), 
                       1:(ncol(nrc.tab) - 2))
ncol(nrc.tab)
1:ncol(nrc.tab)
1:ncol(nrc.tab)-2
nrc.cat
render("notebook.Rmd")
render("notebook.Rmd")
render("notebook.Rmd")
render("notebook.Rmd")
csa.mit.tab
colnames(csa.mit.tab)
csa.wwk
csa.cwk
colnames(csa.cwk)
colnames(csa.mit.tab)
csa.mit.url
csa.mit.url
csa.mit.tab[, "Code"]
csa.mit.url
csa.mit.url
head(csa.mit.tab)
head(csa.mit.tab)
head(csa.mit.tab)
render("notebook.Rmd")
csa.mit.url
colnames(csa.mit.tab)
head(csa.mit.tab)
csa.mit.tab[, "Code"]
csa.mit.url
csa.mit.tab
csa.mit.url
csa.mit.tab
csa.mit.url
redner("notebook.Rmd")
render("notebook.Rmd")
head(csa.mit.tab)
x
x
x
x
x
x
x
x
csa.mit.codes
x
csa.mit.codes
csa.mit.codes
csa.mit.codes
render("notebook.Rmd")
colnames(csa.mit.tab)
render("notebook.Rmd")
q()
n
library(rmarkdown)
render("notebook.Rmd")
?read_sheet
mode(db.og)
class(db.og)
1
xy
xy
xy
xy
head(xy)
colnames(xy)
dim(xy)
dim(x)
dim(out)
dim(x)
dim(y)
dim(db.mg)
rm(db.mg)
dim(db.mg)
colnames(db.mg)
dim(nrc.tab)
colnames(nrc.tab)
colnames(db.mg)
colnames(db.jh)
colnames(db.og)
colnames(nrc.tab)
debug(db_merge)
colnames(xy)
colnames(yx)
dim(xy)
dim(yx)
cn.xy
xn.yx
cn.yx
xxy
head(xy)
head(yx)
colnames(xy)
colnames(yx)
cn.xy
cn.x
cn.y
yx
colnames(yx)
colnames(xy)
colnames(x)
colnames(y)
colnames(nrc.tab)
?read_sheet
?googlesheets4::write_sheet
sheet_write
?sheet_write
q()
n
library(rmarkdown)
render("notebook.Rmd")
render("notebook.Rmd")
q()
n
q()
n
setwd("../hicsatool/")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
nrc.tab
colnames(nrc.tab)
nrc.tab
runApp()
runApp()
library(rmarkdown)
setwd("../hi-csa-es/")
q()
n
head(attra)
glimpse(attra)
summary(attra)
names(attra)
names(hicsa)
hicsa[["Mitigation"]]
getwd()
setwd("../hi-csa-db")
ls
head(attra[["INDEX"]][, "Url"])
head(attra[["INDEX"]])
q()
n
2
setwd("../hicsatool/")
q()
n
length(x)
x[[1]]
x[[2]]
x[[3]]
x[1]
q()
n
